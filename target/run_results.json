{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.9.3", "generated_at": "2025-04-04T20:47:08.555387Z", "invocation_id": "aa520693-d7dc-44bf-99bf-490009000214", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-04T20:47:08.037319Z", "completed_at": "2025-04-04T20:47:08.049351Z"}, {"name": "execute", "started_at": "2025-04-04T20:47:08.049351Z", "completed_at": "2025-04-04T20:47:08.252044Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.2217111587524414, "adapter_response": {"_message": "SELECT 2", "code": "SELECT", "rows_affected": 2}, "message": "SELECT 2", "failures": null, "unique_id": "model.dbt_postgres_prj1.my_first_dbt_model", "compiled": true, "compiled_code": "/*\n    Welcome to your first dbt model!\n    Did you know that you can also configure models directly within SQL files?\n    This will override configurations stated in dbt_project.yml\n\n    Try changing \"table\" to \"view\" below\n*/\n\n\n\nwith source_data as (\n\n    select 1 as id\n    union all\n    select null as id\n\n)\n\nselect *\nfrom source_data\n\n/*\n    Uncomment the line below to remove records with null `id` values\n*/\n\n-- where id is not null", "relation_name": "\"dvdrental\".\"public\".\"my_first_dbt_model\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-04T20:47:08.042319Z", "completed_at": "2025-04-04T20:47:08.059350Z"}, {"name": "execute", "started_at": "2025-04-04T20:47:08.075352Z", "completed_at": "2025-04-04T20:47:08.265031Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.23171472549438477, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.dbt_postgres_prj1.stg_dvdrental_customers", "compiled": true, "compiled_code": "with source_customer as (\n\n    select * from \"dvdrental\".\"public\".\"customer\"\n\n),\n\nfinal as (\n\tselect * from source_customer\n)\n\nselect * from final", "relation_name": "\"dvdrental\".\"public\".\"stg_dvdrental_customers\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-04T20:47:08.046353Z", "completed_at": "2025-04-04T20:47:08.074353Z"}, {"name": "execute", "started_at": "2025-04-04T20:47:08.091360Z", "completed_at": "2025-04-04T20:47:08.270031Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.23571133613586426, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.dbt_postgres_prj1.stg_dvdrental_rentals", "compiled": true, "compiled_code": "with source_rental as (\n\n    select * from \"dvdrental\".\"public\".\"rental\"\n\n),\n\nfinal as (\n\tselect * from source_rental\n)\n\nselect * from final", "relation_name": "\"dvdrental\".\"public\".\"stg_dvdrental_rentals\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-04T20:47:08.044344Z", "completed_at": "2025-04-04T20:47:08.074353Z"}, {"name": "execute", "started_at": "2025-04-04T20:47:08.089362Z", "completed_at": "2025-04-04T20:47:08.273035Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.2417130470275879, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.dbt_postgres_prj1.stg_dvdrental_payments", "compiled": true, "compiled_code": "with source_payment as (\n\n    select * from \"dvdrental\".\"public\".\"payment\"\n\n),\n\nfinal as (\n\tselect * from source_payment\n)\n\nselect * from final", "relation_name": "\"dvdrental\".\"public\".\"stg_dvdrental_payments\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-04T20:47:08.285046Z", "completed_at": "2025-04-04T20:47:08.288048Z"}, {"name": "execute", "started_at": "2025-04-04T20:47:08.288048Z", "completed_at": "2025-04-04T20:47:08.375770Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.09372711181640625, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.dbt_postgres_prj1.customers", "compiled": true, "compiled_code": "with customers as (\n\n    select * from \"dvdrental\".\"public\".\"stg_dvdrental_customers\"\n\n),\n\nrentals as (\n\n    select * from \"dvdrental\".\"public\".\"stg_dvdrental_rentals\"\n\n),\n\npayments as (\n\n    select * from \"dvdrental\".\"public\".\"stg_dvdrental_payments\"\n\n),\n\ncustomer_rentals as (\n\n        select\n        customer_id,\n\n        min(rental_date) as first_rental,\n        max(rental_date) as most_recent_rental,\n        count(rental_id) as number_of_rentals\n    from rentals\n\n    group by customer_id\n\n),\n\ncustomer_payments as (\n\n    select\n        rentals.customer_id,\n        sum(amount) as total_amount\n\n    from payments\n\n    left join rentals on\n         payments.rental_id = rentals.rental_id\n\n    group by rentals.customer_id\n\n),\n\nfinal as (\n\n    select\n        customers.customer_id,\n        customers.first_name,\n        customers.last_name,\n        customer_rentals.first_rental,\n        customer_rentals.most_recent_rental,\n        customer_rentals.number_of_rentals,\n        customer_payments.total_amount as customer_lifetime_value\n\n    from customers\n\n    left join customer_rentals\n        on customers.customer_id = customer_rentals.customer_id\n\n    left join customer_payments\n        on  customers.customer_id = customer_payments.customer_id\n\n)\n\nselect * from final", "relation_name": "\"dvdrental\".\"public\".\"customers\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-04T20:47:08.274030Z", "completed_at": "2025-04-04T20:47:08.278033Z"}, {"name": "execute", "started_at": "2025-04-04T20:47:08.279032Z", "completed_at": "2025-04-04T20:47:08.476872Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.20884037017822266, "adapter_response": {"_message": "SELECT 1", "code": "SELECT", "rows_affected": 1}, "message": "SELECT 1", "failures": null, "unique_id": "model.dbt_postgres_prj1.my_second_dbt_model", "compiled": true, "compiled_code": "-- Use the `ref` function to select from other models\n\nselect *\nfrom \"dvdrental\".\"public\".\"my_first_dbt_model\"\nwhere id = 1", "relation_name": "\"dvdrental\".\"public\".\"my_second_dbt_model\"", "batch_results": null}], "elapsed_time": 0.9739236831665039, "args": {"send_anonymous_usage_stats": true, "empty": false, "partial_parse": true, "introspect": true, "warn_error_options": {"include": [], "exclude": []}, "which": "run", "print": true, "exclude": [], "require_nested_cumulative_type_params": false, "printer_width": 80, "require_batched_execution_for_custom_microbatch_strategy": false, "static_parser": true, "populate_cache": true, "require_resource_names_without_spaces": false, "log_level": "info", "state_modified_compare_more_unrendered_values": false, "state_modified_compare_vars": false, "macro_debugging": false, "invocation_command": "dbt run", "use_colors_file": true, "profiles_dir": "C:\\Users\\peichunl\\.dbt", "use_colors": true, "defer": false, "skip_nodes_if_on_run_start_fails": false, "show_resource_report": false, "version_check": true, "require_yaml_configuration_for_mf_time_spines": false, "log_level_file": "debug", "source_freshness_run_project_hooks": false, "select": [], "quiet": false, "log_file_max_bytes": 10485760, "require_explicit_package_overrides_for_builtin_materializations": true, "write_json": true, "favor_state": false, "log_path": "C:\\Program Files\\Python312\\dbt-core-demo\\dbt_postgres_prj1\\logs", "log_format_file": "debug", "vars": {}, "log_format": "default", "indirect_selection": "eager", "partial_parse_file_diff": true, "cache_selected_only": false, "project_dir": "C:\\Program Files\\Python312\\dbt-core-demo\\dbt_postgres_prj1", "strict_mode": false}}