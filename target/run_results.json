{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.9.3", "generated_at": "2025-04-07T19:22:49.273901Z", "invocation_id": "40fba00a-9319-4202-b29a-05506ae9ecde", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-07T19:22:48.705814Z", "completed_at": "2025-04-07T19:22:48.712822Z"}, {"name": "execute", "started_at": "2025-04-07T19:22:48.736333Z", "completed_at": "2025-04-07T19:22:48.917298Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.22047066688537598, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.dbt_postgres_prj1.stg_dvdrental_customers", "compiled": true, "compiled_code": "with source_customer as (\n\n    select * from \"dvdrental\".\"public\".\"customer\"\n\n),\n\nfinal as (\n\tselect * from source_customer\n)\n\nselect * from final", "relation_name": "\"dvdrental\".\"public\".\"stg_dvdrental_customers\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-07T19:22:48.700813Z", "completed_at": "2025-04-07T19:22:48.712822Z"}, {"name": "execute", "started_at": "2025-04-07T19:22:48.712822Z", "completed_at": "2025-04-07T19:22:48.932808Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.23800373077392578, "adapter_response": {"_message": "SELECT 2", "code": "SELECT", "rows_affected": 2}, "message": "SELECT 2", "failures": null, "unique_id": "model.dbt_postgres_prj1.my_first_dbt_model", "compiled": true, "compiled_code": "/*\n    Welcome to your first dbt model!\n    Did you know that you can also configure models directly within SQL files?\n    This will override configurations stated in dbt_project.yml\n\n    Try changing \"table\" to \"view\" below\n*/\n\n\n\nwith source_data as (\n\n    select 1 as id\n    union all\n    select null as id\n\n)\n\nselect *\nfrom source_data\n\n/*\n    Uncomment the line below to remove records with null `id` values\n*/\n\n-- where id is not null", "relation_name": "\"dvdrental\".\"public\".\"my_first_dbt_model\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-07T19:22:48.708825Z", "completed_at": "2025-04-07T19:22:48.720823Z"}, {"name": "execute", "started_at": "2025-04-07T19:22:48.753684Z", "completed_at": "2025-04-07T19:22:48.933807Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.23597168922424316, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.dbt_postgres_prj1.stg_dvdrental_inventories", "compiled": true, "compiled_code": "with source_inventory as (\n\n    select * from \"dvdrental\".\"public\".\"inventory\"\n\n),\n\nfinal as (\n\tselect * from source_inventory\n)\n\nselect * from final", "relation_name": "\"dvdrental\".\"public\".\"stg_dvdrental_inventories\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-07T19:22:48.707825Z", "completed_at": "2025-04-07T19:22:48.749474Z"}, {"name": "execute", "started_at": "2025-04-07T19:22:48.756683Z", "completed_at": "2025-04-07T19:22:48.934807Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.23798036575317383, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.dbt_postgres_prj1.stg_dvdrental_films", "compiled": true, "compiled_code": "with source_film as (\n\n    select * from \"dvdrental\".\"public\".\"film\"\n\n),\n\nfinal as (\n\tselect * from source_film\n)\n\nselect * from final", "relation_name": "\"dvdrental\".\"public\".\"stg_dvdrental_films\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-07T19:22:48.937806Z", "completed_at": "2025-04-07T19:22:48.944807Z"}, {"name": "execute", "started_at": "2025-04-07T19:22:48.945807Z", "completed_at": "2025-04-07T19:22:49.072319Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.1415116786956787, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.dbt_postgres_prj1.stg_dvdrental_payments", "compiled": true, "compiled_code": "with source_payment as (\n\n    select * from \"dvdrental\".\"public\".\"payment\"\n\n),\n\nfinal as (\n\tselect * from source_payment\n)\n\nselect * from final", "relation_name": "\"dvdrental\".\"public\".\"stg_dvdrental_payments\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-07T19:22:48.951806Z", "completed_at": "2025-04-07T19:22:48.958808Z"}, {"name": "execute", "started_at": "2025-04-07T19:22:48.960807Z", "completed_at": "2025-04-07T19:22:49.097319Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.14951276779174805, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.dbt_postgres_prj1.stg_dvdrental_rentals", "compiled": true, "compiled_code": "with source_rental as (\n\n    select * from \"dvdrental\".\"public\".\"rental\"\n\n),\n\nfinal as (\n\tselect * from source_rental\n)\n\nselect * from final", "relation_name": "\"dvdrental\".\"public\".\"stg_dvdrental_rentals\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-07T19:22:48.956807Z", "completed_at": "2025-04-07T19:22:48.964806Z"}, {"name": "execute", "started_at": "2025-04-07T19:22:48.968807Z", "completed_at": "2025-04-07T19:22:49.103318Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.15351104736328125, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.dbt_postgres_prj1.ratings_inventories", "compiled": true, "compiled_code": "with films as (\n\n    select * from \"dvdrental\".\"public\".\"stg_dvdrental_films\"\n\n),\n\ninventories as (\n\n    select * from \"dvdrental\".\"public\".\"stg_dvdrental_inventories\"\n\n),\n\ninventories_filmid as (\n\n    select\n        film_id,\n        count(*) as filmid_count\n\n    from inventories\n\n    group by film_id\n\n),\n\ninventories_filmid_ratings as (\n\n   select \n      inventories_filmid.film_id,\n      inventories_filmid.filmid_count,\n      films.rating\n\n    from inventories_filmid\n\n\n    left join films\n        on inventories_filmid.film_id = films.film_id\n\n),\n\nfinal as (\n\n  select rating,\n         sum(filmid_count) as total_filmid_count\n  from inventories_filmid_ratings \n  group by rating\n)\n\nselect * from final", "relation_name": "\"dvdrental\".\"public\".\"ratings_inventories\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-07T19:22:48.954807Z", "completed_at": "2025-04-07T19:22:48.964806Z"}, {"name": "execute", "started_at": "2025-04-07T19:22:48.965806Z", "completed_at": "2025-04-07T19:22:49.109322Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.1595156192779541, "adapter_response": {"_message": "SELECT 1", "code": "SELECT", "rows_affected": 1}, "message": "SELECT 1", "failures": null, "unique_id": "model.dbt_postgres_prj1.my_second_dbt_model", "compiled": true, "compiled_code": "-- Use the `ref` function to select from other models\n\nselect *\nfrom \"dvdrental\".\"public\".\"my_first_dbt_model\"\nwhere id = 1", "relation_name": "\"dvdrental\".\"public\".\"my_second_dbt_model\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-07T19:22:49.111324Z", "completed_at": "2025-04-07T19:22:49.115323Z"}, {"name": "execute", "started_at": "2025-04-07T19:22:49.116323Z", "completed_at": "2025-04-07T19:22:49.201082Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.09276080131530762, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.dbt_postgres_prj1.customers", "compiled": true, "compiled_code": "with customers as (\n\n    select * from \"dvdrental\".\"public\".\"stg_dvdrental_customers\"\n\n),\n\nrentals as (\n\n    select * from \"dvdrental\".\"public\".\"stg_dvdrental_rentals\"\n\n),\n\npayments as (\n\n    select * from \"dvdrental\".\"public\".\"stg_dvdrental_payments\"\n\n),\n\ncustomer_rentals as (\n\n        select\n        customer_id,\n\n        min(rental_date) as first_rental,\n        max(rental_date) as most_recent_rental,\n        count(rental_id) as number_of_rentals\n    from rentals\n\n    group by customer_id\n\n),\n\ncustomer_payments as (\n\n    select\n        rentals.customer_id,\n        sum(amount) as total_amount\n\n    from payments\n\n    left join rentals on\n         payments.rental_id = rentals.rental_id\n\n    group by rentals.customer_id\n\n),\n\nfinal as (\n\n    select\n        customers.customer_id,\n        customers.first_name,\n        customers.last_name,\n        customer_rentals.first_rental,\n        customer_rentals.most_recent_rental,\n        customer_rentals.number_of_rentals,\n        customer_payments.total_amount as customer_lifetime_value\n\n    from customers\n\n    left join customer_rentals\n        on customers.customer_id = customer_rentals.customer_id\n\n    left join customer_payments\n        on  customers.customer_id = customer_payments.customer_id\n\n)\n\nselect * from final", "relation_name": "\"dvdrental\".\"public\".\"customers\"", "batch_results": null}], "elapsed_time": 0.944401741027832, "args": {"exclude": [], "print": true, "use_colors_file": true, "favor_state": false, "empty": false, "require_resource_names_without_spaces": false, "send_anonymous_usage_stats": true, "require_yaml_configuration_for_mf_time_spines": false, "vars": {}, "show_resource_report": false, "write_json": true, "state_modified_compare_vars": false, "defer": false, "project_dir": "C:\\Program Files\\Python312\\dbt-core-demo\\dbt_postgres_prj1", "use_colors": true, "log_format": "default", "quiet": false, "static_parser": true, "log_level_file": "debug", "macro_debugging": false, "source_freshness_run_project_hooks": false, "partial_parse_file_diff": true, "which": "run", "indirect_selection": "eager", "strict_mode": false, "introspect": true, "warn_error_options": {"include": [], "exclude": []}, "log_level": "info", "log_path": "C:\\Program Files\\Python312\\dbt-core-demo\\dbt_postgres_prj1\\logs", "select": [], "state_modified_compare_more_unrendered_values": false, "log_file_max_bytes": 10485760, "populate_cache": true, "require_explicit_package_overrides_for_builtin_materializations": true, "require_batched_execution_for_custom_microbatch_strategy": false, "profiles_dir": "C:\\Users\\peichunl\\.dbt", "skip_nodes_if_on_run_start_fails": false, "partial_parse": true, "printer_width": 80, "cache_selected_only": false, "version_check": true, "log_format_file": "debug", "invocation_command": "dbt run", "require_nested_cumulative_type_params": false}}