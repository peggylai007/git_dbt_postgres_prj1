{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.9.3", "generated_at": "2025-04-04T18:37:53.856464Z", "invocation_id": "cf8f5ad6-3500-4dbd-aeb8-8fb62a39049c", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-04T18:37:53.484707Z", "completed_at": "2025-04-04T18:37:53.487211Z"}, {"name": "execute", "started_at": "2025-04-04T18:37:53.487211Z", "completed_at": "2025-04-04T18:37:53.668148Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.19044733047485352, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.dbt_postgres_prj1.stg_dvdrental_customers", "compiled": true, "compiled_code": "with source_customer as (\n\n    select * from \"dvdrental\".\"public\".\"customer\"\n\n),\n\nfinal as (\n\tselect * from source_customer\n)\n\nselect * from final", "relation_name": "\"dvdrental\".\"public\".\"stg_dvdrental_customers\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-04T18:37:53.479713Z", "completed_at": "2025-04-04T18:37:53.487211Z"}, {"name": "execute", "started_at": "2025-04-04T18:37:53.515580Z", "completed_at": "2025-04-04T18:37:53.670149Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.1938633918762207, "adapter_response": {"_message": "SELECT 2", "code": "SELECT", "rows_affected": 2}, "message": "SELECT 2", "failures": null, "unique_id": "model.dbt_postgres_prj1.my_first_dbt_model", "compiled": true, "compiled_code": "/*\n    Welcome to your first dbt model!\n    Did you know that you can also configure models directly within SQL files?\n    This will override configurations stated in dbt_project.yml\n\n    Try changing \"table\" to \"view\" below\n*/\n\n\n\nwith source_data as (\n\n    select 1 as id\n    union all\n    select null as id\n\n)\n\nselect *\nfrom source_data\n\n/*\n    Uncomment the line below to remove records with null `id` values\n*/\n\n-- where id is not null", "relation_name": "\"dvdrental\".\"public\".\"my_first_dbt_model\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-04T18:37:53.678021Z", "completed_at": "2025-04-04T18:37:53.681025Z"}, {"name": "execute", "started_at": "2025-04-04T18:37:53.682023Z", "completed_at": "2025-04-04T18:37:53.775575Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.09855461120605469, "adapter_response": {"_message": "SELECT 1", "code": "SELECT", "rows_affected": 1}, "message": "SELECT 1", "failures": null, "unique_id": "model.dbt_postgres_prj1.my_second_dbt_model", "compiled": true, "compiled_code": "-- Use the `ref` function to select from other models\n\nselect *\nfrom \"dvdrental\".\"public\".\"my_first_dbt_model\"\nwhere id = 1", "relation_name": "\"dvdrental\".\"public\".\"my_second_dbt_model\"", "batch_results": null}], "elapsed_time": 0.8594405651092529, "args": {"empty": false, "macro_debugging": false, "profiles_dir": "C:\\Users\\peichunl\\.dbt", "require_resource_names_without_spaces": false, "log_file_max_bytes": 10485760, "defer": false, "which": "run", "print": true, "cache_selected_only": false, "state_modified_compare_more_unrendered_values": false, "write_json": true, "vars": {}, "require_nested_cumulative_type_params": false, "show_resource_report": false, "introspect": true, "project_dir": "C:\\Program Files\\Python312\\dbt-core-demo\\dbt_postgres_prj1", "favor_state": false, "log_format_file": "debug", "printer_width": 80, "log_level_file": "debug", "send_anonymous_usage_stats": true, "use_colors": true, "log_path": "C:\\Program Files\\Python312\\dbt-core-demo\\dbt_postgres_prj1\\logs", "source_freshness_run_project_hooks": false, "require_explicit_package_overrides_for_builtin_materializations": true, "log_format": "default", "log_level": "info", "exclude": [], "indirect_selection": "eager", "version_check": true, "invocation_command": "dbt run", "require_batched_execution_for_custom_microbatch_strategy": false, "require_yaml_configuration_for_mf_time_spines": false, "state_modified_compare_vars": false, "warn_error_options": {"include": [], "exclude": []}, "populate_cache": true, "quiet": false, "static_parser": true, "use_colors_file": true, "strict_mode": false, "skip_nodes_if_on_run_start_fails": false, "select": [], "partial_parse_file_diff": true, "partial_parse": true}}